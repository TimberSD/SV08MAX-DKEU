
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

[mcu buffer_mcu]
canbus_uuid: 704fe1305bd6

[buffer_stepper filament_buffer]
step_pin: buffer_mcu: PA8           
dir_pin: buffer_mcu: PA9           
enable_pin: !buffer_mcu: PA11       
microsteps: 16                      
rotation_distance: 9.75               
velocity: 120                        
accel: 5000                         
push_length: 25                 
full_steps_per_rotation: 200   
push_pin: ^buffer_mcu: PB11

[tmc2209 buffer_stepper filament_buffer]
uart_pin: buffer_mcu: PA12
interpolate: True
run_current: 0.9
hold_current: 0.4
sense_resistor: 0.150          
uart_address: 3

[filament_switch_sensor filament_sensor]
pause_on_runout: False
switch_pin: ^buffer_mcu: PA10
event_delay: 0.1
insert_gcode: 
    { action_respond_info("Insert Detected!") }
    # SET_PIN PIN=LED_Green VALUE=1.00   
    # SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
runout_gcode:  
    # CONTINUE_PRINT_D D={1100}
    { action_respond_info("Runout Detected") }
    {% if printer.print_stats.state == "printing" %}
      _FIL_CHANGE_PARK
    {% endif %}

[output_pin CLOG_DETECTION]
pin: Set_your_Buffer_Stepper_CLOG_DETECTION_pin_here! #<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< ENTER YOUR OWN PIN HERE!!
value: 1 #<<<<<<<<<<<<<<<<<<<<< SET THIS TO "0" IF YOU WANT THIS SYSTEM TO BE ALWAYS OFF UNLESS YOU TURN IT ON!

[output_pin JAM_DETECTION]
pin: Set_your_Buffer_Stepper_JAM_DETECTION_pin_here! #<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< ENTER YOUR OWN PIN HERE!!
value: 1 #<<<<<<<<<<<<<<<<<<<<< SET THIS TO "0" IF YOU WANT THIS SYSTEM TO BE ALWAYS OFF UNLESS YOU TURN IT ON!
    
[output_pin LED_Red]
pin: !buffer_mcu: PC14
value: 0

[output_pin LED_Blue]
pin: !buffer_mcu: PC15
value: 0

[output_pin LED_Green]
pin: !buffer_mcu: PB1  
value: 0    

[gcode_macro _global_var]
variable_is_push_buffer: True
gcode:

##############################################################################################################################################################################################

[gcode_button manual_push] 
pin: buffer_mcu: PA1
press_gcode:
release_gcode:
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected and printer["print_stats"].state != "printing" and printer["gcode_button stall_push_stop"].state != "PRESSED" %}
        {% if printer["gcode_macro variables"].is_manual_feeding %}
            SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=True
            SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
            BUFFER_STEPPER STEPPER=filament_buffer ENABLE=0
            {% if printer["gcode_macro variables"].feeding_out == True %}
              RESPOND TYPE=ECHO MSG="Filament FEED-OUT Stop!"
              SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
              UPDATE_DELAYED_GCODE ID=feed_out_loop DURATION=0
            {% else %}
              RESPOND TYPE=ECHO MSG="Filament FEED-IN Stop!"
              UPDATE_DELAYED_GCODE ID=feed_loop DURATION=0
            {% endif %}
            
        {% else %}
          {% if not printer["gcode_macro variables"].is_manual_feeding %}
            BUFFER_STEPPER STEPPER=filament_buffer ENABLE=1
            {% if printer["gcode_macro variables"].feeding_out == True %}
              RESPOND TYPE=ECHO MSG="Filament FEED-OUT Requested! Hit the feeder button again to STOP!"
              SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=False
              SET_GCODE_VARIABLE MACRO=variables VARIABLE=feeding_out VALUE=True
              SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
              _FEED_OUT_LOOP

            {% else %} 
              RESPOND TYPE=ECHO MSG="Filament FEED-IN Requested! Hit the feeder button again to STOP!"
              SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=False
              SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
              FEED_LOOP
            {% endif %}
          {% endif %}
        {% endif %}

    {% elif not printer["filament_switch_sensor filament_sensor"].filament_detected and printer["print_stats"].state != "printing" and printer["gcode_button stall_push_stop"].state != "PRESSED" %}
      RESPOND TYPE=error MSG="No filament detected, please insert filament into the feeder so the LED turns green & try again!"
    {% endif %}



[gcode_button stall_push_stop] 
pin: ^buffer_mcu: PB10
press_gcode:
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
release_gcode:



[gcode_macro variables]
variable_stop_feeding: False
variable_feeding_out: False
variable_is_manual_feeding: False
variable_plug_status: False
variable_winding_status: False
variable_clog_retry: False
gcode:



[gcode_macro FEED_LOOP] 
gcode:
  {% if printer["gcode_macro variables"].stop_feeding|default(False) %}
    { action_respond_info("stop push filament") }
    {% if not printer["filament_switch_sensor filament_sensor"].filament_detected %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
      RESPOND TYPE=error MSG="Runout detected during FEED_IN process! Starting auto FEED_OUT!"
      _FEED_OUT_LOOP
    
    {% else %}
      SET_GCODE_VARIABLE MACRO=variables VARIABLE=feeding_out VALUE=False
      SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=False
      SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=prompt_running VALUE=True
      _FEED_IN_PROMPT
    {% endif %}
  
  {% else %}
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=feeding_out VALUE=False
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=2 SPEED=50
    UPDATE_DELAYED_GCODE ID=feed_loop DURATION=0.06
  {% endif %}



[delayed_gcode feed_loop]
gcode:
  FEED_LOOP



[gcode_macro _FEED_OUT_LOOP] 
gcode:
  {% if not printer["filament_switch_sensor filament_sensor"].filament_detected and printer['filament_switch_sensor filament_sensor'].enabled == 1 %}
    { action_respond_info("Stop filament feed out") }
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=False
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=feeding_out VALUE=False
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
    BUFFER_STEPPER STEPPER=filament_buffer ENABLE=0
    
  {% else %}
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected and printer['filament_switch_sensor filament_sensor'].enabled != 1 %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    {% endif %}
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=feeding_out VALUE=True
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-2 SPEED=100
    UPDATE_DELAYED_GCODE ID=feed_out_loop DURATION=0.06
  {% endif %}



[delayed_gcode feed_out_loop]
gcode:
  _FEED_OUT_LOOP



[gcode_macro _AUTO_FEED_MESSAGE] 
gcode:
  {% if printer.print_stats.state not in ["printing", "paused"] %}
    {% if printer.extruder.target == 0 %}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=130
    {% endif %} 
    RESPOND TYPE=error MSG="Auto Filament FEED-IN!! Nozzle PRE-HEATING! HOLD DOWN PUSH LEVER while feeding until filament is near extruder. Press button above the Green LED to STOP feeding, press again to resume!"
  {% endif %}



[gcode_macro NOZZLE_CLOG_CHECK]
variable_extrusion_start: 0
variable_time_start: 0
gcode:
    {% set extrusion_start = printer.print_stats.filament_used|int %}
    {% set time_start = printer.print_stats.print_duration|int %}
    SET_GCODE_VARIABLE MACRO=NOZZLE_CLOG_CHECK VARIABLE=extrusion_start VALUE={extrusion_start}
    SET_GCODE_VARIABLE MACRO=NOZZLE_CLOG_CHECK VARIABLE=time_start VALUE={time_start}
    {% if time_start > 0 %}
        UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=1
    {% endif %}


    
[delayed_gcode CHECK_NOZZLE_CLOG]
gcode:
    {% set current_extrusion = printer.print_stats.filament_used|int %}
    {% set extrusion_start = printer["gcode_macro NOZZLE_CLOG_CHECK"].extrusion_start|int %}
    {% set delta_extrusion = current_extrusion - extrusion_start %}

    {% if printer["output_pin CLOG_DETECTION"].value == 0 %}
      {% if printer.print_stats.state in ['printing', 'paused'] %}
        UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=5
      {% else %}
        UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=0
        SET_PIN PIN=CLOG_DETECTION VALUE=1.0
      {% endif %}
      
    {% else %}
      {% if printer.print_stats.state == 'printing' %}
        {% if delta_extrusion > 60 and not printer["gcode_macro variables"].clog_retry %}
            SET_GCODE_VARIABLE MACRO=variables VARIABLE=clog_retry VALUE=True
            UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=5

        {% elif delta_extrusion > 60 and printer["gcode_macro variables"].clog_retry %}
          SET_PIN PIN=LED_Green VALUE=0  
          SET_PIN PIN=LED_Red VALUE=1   
          # PAUSE
          _FIL_CHANGE_PARK
          { action_respond_info("Nozzle clog detected! Extruded only: " ~ delta_extrusion) }
          SET_GCODE_VARIABLE MACRO=variables VARIABLE=plug_status VALUE=True
          SET_GCODE_VARIABLE MACRO=variables VARIABLE=clog_retry VALUE=False
          UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=0
          
        {% else %}
          SET_PIN PIN=LED_Green VALUE=1  
          SET_PIN PIN=LED_Red VALUE=0
          UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=1
          SET_GCODE_VARIABLE MACRO=variables VARIABLE=plug_status VALUE=False
          SET_GCODE_VARIABLE MACRO=variables VARIABLE=clog_retry VALUE=False
        {% endif %}

      {% elif printer.print_stats.state != 'printing' %}
        UPDATE_DELAYED_GCODE ID=CHECK_NOZZLE_CLOG DURATION=0   
      {% endif %}
    {% endif %}



[gcode_macro _JAM_DETECTION] 
gcode: 

  {% if printer.print_stats.state == 'printing' %}
    {% if printer["output_pin JAM_DETECTION"].value == 0 %}
      RESPOND TYPE=COMMAND MSG="Filament Jam detected, auto pause DISABLED by user!"
      
    {% else %}
      SET_PIN PIN=LED_Green VALUE=0.00
      SET_PIN PIN=LED_Blue VALUE=1.00
      PAUSE
      SET_GCODE_VARIABLE MACRO=variables VARIABLE=winding_status VALUE=True
      RESPOND TYPE=COMMAND MSG="Filament Jam detected, print paused!"
      RESPOND TYPE=COMMAND MSG="TIP: Be sure to hold down the Feeder arm & move the push lever on the side from it's lowest position before continuing the print!!"
    {% endif %}
  {% endif %}

    
    
[gcode_macro CHECK_FILAMENT_STATUS]
gcode:
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected %}
        SET_PIN PIN=LED_Green VALUE=1  
        SET_PIN PIN=LED_Red VALUE=0
        SET_PIN PIN=LED_Blue VALUE=0
    {% else %}
        SET_PIN PIN=LED_Green VALUE=0 
        SET_PIN PIN=LED_Red VALUE=0
        SET_PIN PIN=LED_Blue VALUE=0
    {% endif %}



[delayed_gcode INITIAL_FILAMENT_CHECK]
gcode:
    CHECK_FILAMENT_STATUS  
initial_duration: 1  



[gcode_macro BUFFER_LONG_UNLOAD_FILAMENT]
gcode:
    UNLOAD_FILAMENT
    M400
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-100 SPEED=10
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-2000 SPEED=50
    G4 P50000



[gcode_macro MANUAL_FEED]
gcode:
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected and printer["buffer_stepper filament_buffer"].push_triggered %}
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=25 SPEED=100 SYNC=1
    {% endif %}
    


[gcode_macro _DEMON_BUFFER_STEPPER_VERSION]
variable_demon_buf_stp_ver: "1.0.2"
gcode:



